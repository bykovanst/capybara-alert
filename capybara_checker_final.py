
import requests
from bs4 import BeautifulSoup
from datetime import datetime
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ GitHub Secrets
TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_IDS = os.getenv("CHAT_IDS", "").split(",")  # –ù–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é

URL = "https://cafecapyba.rsvsys.jp/reservations/calendar"

def check_slots():
    try:
        response = requests.get(URL, timeout=10)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, "html.parser")

        td_tags = soup.find_all("td")
        available = []

        for td in td_tags:
            text = td.get_text(strip=True)
            if "ÊÆã" in text and "Âêç" in text:
                try:
                    count = int(text.replace("ÊÆã", "").replace("Âêç", "").replace("ppl", "").strip())
                    if count > 0:
                        available.append(text)
                except:
                    continue

        now = datetime.now().strftime('%Y-%m-%d %H:%M')

        if available:
            message = f"‚ÄºÔ∏è <b>{now}: –ù–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç–æ –≤ –∫–∞—Ñ–µ –∫–∞–ø–∏–±–∞—Ä!</b>\n\n<a href=\"{URL}\">üîó –ü–µ—Ä–µ–π—Ç–∏ –∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é</a>"
        else:
            message = f"‚è± {now}: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ ‚Äî –º–µ—Å—Ç –Ω–µ—Ç."

        send_telegram_message(message, available != [])

    except Exception as e:
        send_telegram_message(f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}", is_html=False)

def send_telegram_message(message, is_html=True):
    for chat_id in CHAT_IDS:
        payload = {
            "chat_id": chat_id.strip(),
            "text": message,
            "parse_mode": "HTML" if is_html else "Markdown",
            "reply_markup": {
                "inline_keyboard": [
                    [{"text": "üîó –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", "url": URL}]
                ]
            } if is_html else None
        }
        url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
        requests.post(url, json=payload)

if __name__ == "__main__":
    check_slots()
